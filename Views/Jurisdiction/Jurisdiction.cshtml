@model IEnumerable<STD_Contact_Board.Models.Jurisdiction>
@using System.Activities.Validation
@using Kendo.Mvc.UI
@using STD_Contact_Board.Models
@{
    ViewBag.Title = "Jurisdiction";
}

<h2>Jurisdiction</h2>

<script src="http://code.jquery.com/jquery-1.9.1.min.js"></script>
<script src="http://cdnjs.cloudflare.com/ajax/libs/jszip/2.4.0/jszip.js"></script>
<script src="https://kendo.cdn.telerik.com/2020.1.219/js/kendo.all.min.js"></script>
<script src="https://kendo.cdn.telerik.com/2020.1.219/styles/kendo.common.min.css"></script>
<script src="https://kendo.cdn.telerik.com/2020.1.219/js/jszip.min.js"></script>
<link rel="stylesheet" href="styles/kendo.common.min.css" />
<link rel="stylesheet" href="styles/kendo.default.min.css" />
<link rel="stylesheet" href="styles/kendo.default.mobile.min.css" />

<script src="js/jquery.min.js"></script>


<script src="js/kendo.all.min.js"></script>

@(Html.Kendo().Grid<Jurisdiction>()
    .Name("grid")
    .Columns(columns =>
    {
        columns.Bound(p => p.JurisdictionName).Title("Jurisdiction");
        columns.Bound(p => p.AgencyName).Title("Agency");
        columns.Bound(p => p.MainAddress).Title("Address");
        columns.Bound(p => p.Phone).Width(120);
        columns.Bound(p => p.Fax).Width(120);
        columns.Command(command => { command.Edit(); command.Destroy(); }).Width(250);
    })
    .ToolBar(toolbar =>
    {
        toolbar.Create();
        toolbar.Excel();
        toolbar.Search();

    })
    .Editable(editable => editable.Mode(GridEditMode.InLine).ConfirmDelete("Are you sure you want to delete this?").DisplayDeleteConfirmation("Deletion"))
    .Pageable()
    .Sortable()
    .Scrollable()
    .Excel(excel => excel
        .FileName("STD Board Jurisdictions.xlsx")
        .Filterable(true)
        .ProxyURL(Url.Action("Excel_Export_Save", "Grid"))
    )
    .HtmlAttributes(new { style = "height:75vh;" })
    .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(70)
        .Events(events => events.Error("error_handler"))
        .Model(model => model.Id(p => p.Id))
        .Create(update => update.Action("EditingInline_Create", "Jurisdiction"))
        .Read(read => read.Action("EditingInline_Read", "Jurisdiction"))
        .Update(update => update.Action("EditingInline_Update", "Jurisdiction"))
        .Destroy(update => update.Action("EditingInline_Destroy", "Jurisdiction"))
    )
)
<script type="text/javascript">
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    }
</script>